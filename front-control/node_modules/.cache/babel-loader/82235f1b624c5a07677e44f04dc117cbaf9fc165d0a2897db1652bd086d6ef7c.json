{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ateranp\\\\Documents\\\\Spring\\\\controlGastos\\\\front-control\\\\src\\\\components\\\\GastoComponent\\\\GastoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport GastoListView from \"./GastoListView\";\n\n/**\r\n * GastoList.jsx\r\n *\r\n * Componente contenedor que se encarga de obtener la lista de gastos desde el backend\r\n * y pasarla como prop al componente de presentación GastoListView.\r\n *\r\n * <p>Al montar el componente, realiza una petición GET a /api/gasto\r\n * para recuperar todos los gastos registrados.</p>\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GastoList = () => {\n  _s();\n  // Estado local para almacenar la lista de gastos\n  const [gastos, setGastos] = useState([]);\n  useEffect(() => {\n    // Realiza la petición al backend para obtener los gastos\n    axios.get(\"http://localhost:8080/api/gasto\").then(response => {\n      setGastos(response.data); // Actualiza el estado con los datos recibidos\n    }).catch(error => {\n      console.error(\"Error fetching bills: \", error); // Manejo de errores\n    });\n  }, []); // Se ejecuta solo una vez al montar el componente\n\n  // Renderiza la vista, pasando la lista de gastos como prop\n  return /*#__PURE__*/_jsxDEV(GastoListView, {\n    gastos: gastos\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n_s(GastoList, \"HEkqc0M1rJr/WWSs8KsM1Ir2sJo=\");\n_c = GastoList;\nexport default GastoList;\nvar _c;\n$RefreshReg$(_c, \"GastoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","GastoListView","jsxDEV","_jsxDEV","GastoList","_s","gastos","setGastos","get","then","response","data","catch","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ateranp/Documents/Spring/controlGastos/front-control/src/components/GastoComponent/GastoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport GastoListView from \"./GastoListView\";\r\n\r\n/**\r\n * GastoList.jsx\r\n *\r\n * Componente contenedor que se encarga de obtener la lista de gastos desde el backend\r\n * y pasarla como prop al componente de presentación GastoListView.\r\n *\r\n * <p>Al montar el componente, realiza una petición GET a /api/gasto\r\n * para recuperar todos los gastos registrados.</p>\r\n */\r\nconst GastoList = () => {\r\n    // Estado local para almacenar la lista de gastos\r\n    const [gastos, setGastos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Realiza la petición al backend para obtener los gastos\r\n        axios\r\n            .get(\"http://localhost:8080/api/gasto\")\r\n            .then((response) => {\r\n                setGastos(response.data); // Actualiza el estado con los datos recibidos\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching bills: \", error); // Manejo de errores\r\n            });\r\n    }, []); // Se ejecuta solo una vez al montar el componente\r\n\r\n    // Renderiza la vista, pasando la lista de gastos como prop\r\n    return <GastoListView gastos={gastos} />;\r\n};\r\n\r\nexport default GastoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACAC,KAAK,CACAQ,GAAG,CAAC,iCAAiC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAK;MAChBH,SAAS,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBAAOV,OAAA,CAACF,aAAa;IAACK,MAAM,EAAEA;EAAO;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5C,CAAC;AAACb,EAAA,CAlBID,SAAS;AAAAe,EAAA,GAATf,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}