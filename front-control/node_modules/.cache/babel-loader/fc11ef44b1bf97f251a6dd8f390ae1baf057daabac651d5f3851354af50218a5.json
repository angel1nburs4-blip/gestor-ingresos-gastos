{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ateranp\\\\Documents\\\\Spring\\\\controlGastos\\\\front-control\\\\src\\\\components\\\\GastoComponent\\\\GastoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport GastoFormView from \"./GastoFormView\";\n\n/**\r\n * GastoForm.jsx\r\n *\r\n * Componente contenedor que gestiona el estado y la lógica de envío\r\n * del formulario de gastos. Se comunica con el backend vía POST\r\n * y delega la presentación a GastoFormView.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GastoForm = () => {\n  _s();\n  // Estado local para los campos del formulario\n  const [concepto, setConcepto] = useState('');\n  const [monto, setMonto] = useState('');\n\n  /**\r\n   * Maneja el envío del formulario.\r\n   * Envía los datos al backend y limpia los campos si la operación es exitosa.\r\n   */\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Construye el objeto de gasto a enviar\n    const newGasto = {\n      concepto,\n      monto\n    };\n\n    // Realiza la petición POST al backend\n    axios.post(\"http://localhost:8080/api/gasto\", newGasto).then(response => {\n      console.log(\"Spent registered:\", response.data);\n      setConcepto('');\n      setMonto('');\n    }).catch(error => {\n      console.error(\"Error adding spent:\", error);\n    });\n  };\n\n  // Renderiza la vista del formulario, pasando props controladas\n  return /*#__PURE__*/_jsxDEV(GastoFormView, {\n    monto: monto,\n    concepto: concepto,\n    onMontoChange: e => setMonto(e.target.value),\n    onConceptoChange: e => setConcepto(e.target.value),\n    onSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(GastoForm, \"G8QCpeJXuTyRFMnDLJVC/YUwqxU=\");\n_c = GastoForm;\nexport default GastoForm;\nvar _c;\n$RefreshReg$(_c, \"GastoForm\");","map":{"version":3,"names":["React","useState","axios","GastoFormView","jsxDEV","_jsxDEV","GastoForm","_s","concepto","setConcepto","monto","setMonto","handleSubmit","e","preventDefault","newGasto","post","then","response","console","log","data","catch","error","onMontoChange","target","value","onConceptoChange","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ateranp/Documents/Spring/controlGastos/front-control/src/components/GastoComponent/GastoForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport GastoFormView from \"./GastoFormView\";\r\n\r\n/**\r\n * GastoForm.jsx\r\n *\r\n * Componente contenedor que gestiona el estado y la lógica de envío\r\n * del formulario de gastos. Se comunica con el backend vía POST\r\n * y delega la presentación a GastoFormView.\r\n */\r\nconst GastoForm = () => {\r\n    // Estado local para los campos del formulario\r\n    const [concepto, setConcepto] = useState('');\r\n    const [monto, setMonto] = useState('');\r\n\r\n    /**\r\n     * Maneja el envío del formulario.\r\n     * Envía los datos al backend y limpia los campos si la operación es exitosa.\r\n     */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Construye el objeto de gasto a enviar\r\n        const newGasto = { concepto, monto };\r\n\r\n        // Realiza la petición POST al backend\r\n        axios.post(\"http://localhost:8080/api/gasto\", newGasto)\r\n            .then(response => {\r\n                console.log(\"Spent registered:\", response.data);\r\n                setConcepto('');\r\n                setMonto('');\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error adding spent:\", error);\r\n            });\r\n    };\r\n\r\n    // Renderiza la vista del formulario, pasando props controladas\r\n    return (\r\n        <GastoFormView\r\n            monto={monto}\r\n            concepto={concepto}\r\n            onMontoChange={(e) => setMonto(e.target.value)}\r\n            onConceptoChange={(e) => setConcepto(e.target.value)}\r\n            onSubmit={handleSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GastoForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;AACJ;AACA;AACA;EACI,MAAMW,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,QAAQ,GAAG;MAAEP,QAAQ;MAAEE;IAAM,CAAC;;IAEpC;IACAR,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAAED,QAAQ,CAAC,CAClDE,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC/CZ,WAAW,CAAC,EAAE,CAAC;MACfE,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,IAAI;MACZJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACV,CAAC;;EAED;EACA,oBACIlB,OAAA,CAACF,aAAa;IACVO,KAAK,EAAEA,KAAM;IACbF,QAAQ,EAAEA,QAAS;IACnBgB,aAAa,EAAGX,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;IAC/CC,gBAAgB,EAAGd,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACY,MAAM,CAACC,KAAK,CAAE;IACrDE,QAAQ,EAAEhB;EAAa;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}