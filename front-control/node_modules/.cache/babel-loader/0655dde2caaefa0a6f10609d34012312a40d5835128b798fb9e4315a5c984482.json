{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ateranp\\\\Documents\\\\Spring\\\\controlGastos\\\\front-control\\\\src\\\\components\\\\RegistroComponent\\\\RegisterComponent.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  setShowRegister\n}) => {\n  _s();\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:8080/auth/register\", {\n        username,\n        password\n      });\n      setMessage(\"Registro exitoso\");\n\n      // Espera 1.5 segundos y redirige al login\n      setTimeout(() => {\n        setMessage(null);\n        setShowRegister(false);\n      }, 1500);\n      setUserName(\"\");\n      setPassword(\"\");\n    } catch (err) {\n      var _err$response;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || \"Error al registrar\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(RegisterCompView, {\n    userName: username,\n    password: password,\n    onUserNameChange: e => setUserName(e.target.value),\n    onPasswordChange: e => setPassword(e.target.value),\n    onSubmit: handleSubmit,\n    setShowRegister: setShowRegister,\n    message: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"yvX2tueBbfU2+hdDAZ62CSQmLYc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Register","setShowRegister","_s","username","setUserName","useState","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","axios","post","setTimeout","err","_err$response","response","data","_jsxDEV","RegisterCompView","userName","onUserNameChange","target","value","onPasswordChange","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ateranp/Documents/Spring/controlGastos/front-control/src/components/RegistroComponent/RegisterComponent.js"],"sourcesContent":["const Register = ({ setShowRegister }) => {\r\n    const [username, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post(\"http://localhost:8080/auth/register\", {\r\n                username,\r\n                password\r\n            });\r\n\r\n            setMessage(\"Registro exitoso\");\r\n\r\n            // Espera 1.5 segundos y redirige al login\r\n            setTimeout(() => {\r\n                setMessage(null);\r\n                setShowRegister(false);\r\n            }, 1500);\r\n\r\n            setUserName(\"\");\r\n            setPassword(\"\");\r\n        } catch (err) {\r\n            setMessage(err.response?.data || \"Error al registrar\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RegisterCompView\r\n            userName={username}\r\n            password={password}\r\n            onUserNameChange={(e) => setUserName(e.target.value)}\r\n            onPasswordChange={(e) => setPassword(e.target.value)}\r\n            onSubmit={handleSubmit}\r\n            setShowRegister={setShowRegister}\r\n            message={message}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,KAAK,CAACC,IAAI,CAAC,qCAAqC,EAAE;QACpDX,QAAQ;QACRG;MACJ,CAAC,CAAC;MAEFG,UAAU,CAAC,kBAAkB,CAAC;;MAE9B;MACAM,UAAU,CAAC,MAAM;QACbN,UAAU,CAAC,IAAI,CAAC;QAChBR,eAAe,CAAC,KAAK,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC;MAERG,WAAW,CAAC,EAAE,CAAC;MACfG,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOS,GAAG,EAAE;MAAA,IAAAC,aAAA;MACVR,UAAU,CAAC,EAAAQ,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,IAAI,KAAI,oBAAoB,CAAC;IAC1D;EACJ,CAAC;EAED,oBACIC,OAAA,CAACC,gBAAgB;IACbC,QAAQ,EAAEnB,QAAS;IACnBG,QAAQ,EAAEA,QAAS;IACnBiB,gBAAgB,EAAGZ,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACa,MAAM,CAACC,KAAK,CAAE;IACrDC,gBAAgB,EAAGf,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACa,MAAM,CAACC,KAAK,CAAE;IACrDE,QAAQ,EAAEjB,YAAa;IACvBT,eAAe,EAAEA,eAAgB;IACjCO,OAAO,EAAEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAvCIF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}