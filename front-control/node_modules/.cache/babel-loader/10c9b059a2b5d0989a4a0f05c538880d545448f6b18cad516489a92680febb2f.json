{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ateranp\\\\Documents\\\\Spring\\\\controlGastos\\\\front-control\\\\src\\\\components\\\\CapitalComponent\\\\CapitalGet.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CapitalView from \"./CapitalView\";\n\n/**\r\n * Componente que consulta el capital actual desde el backend\r\n * y lo pasa como prop al componente de visualización CapitalView.\r\n *\r\n * <p>Al montar el componente, se realiza una petición GET a /api/capital\r\n * incluyendo el token JWT almacenado en localStorage.</p>\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CapitalComponent() {\n  _s();\n  // Estado local para almacenar el capital recibido\n  const [capital, setCapital] = useState(null);\n  useEffect(() => {\n    // Recupera el token JWT desde localStorage (asumido que se guardó al hacer login)\n    const token = localStorage.getItem(\"token\");\n\n    // Realiza la petición al backend con el token en el header Authorization\n    axios.get(\"http://localhost:8080/api/capital\", {\n      headers: {\n        Authorization: `Bearer ${token}` // Autenticación vía JWT\n      }\n    }).then(response => {\n      // Actualiza el estado con el capital recibido\n      setCapital(response.data);\n    }).catch(error => {\n      // Manejo de errores: muestra en consola\n      console.error(\"Error al obtener capital\", error);\n    });\n  }, []); // Se ejecuta solo una vez al montar el componente\n\n  // Renderiza el componente de vista, pasando el capital como prop\n  return /*#__PURE__*/_jsxDEV(CapitalView, {\n    capital: capital\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n_s(CapitalComponent, \"kminKuxGjHGsSbiAS9btNWCJAoc=\");\n_c = CapitalComponent;\nexport default CapitalComponent;\nvar _c;\n$RefreshReg$(_c, \"CapitalComponent\");","map":{"version":3,"names":["React","useEffect","useState","axios","CapitalView","jsxDEV","_jsxDEV","CapitalComponent","_s","capital","setCapital","token","localStorage","getItem","get","headers","Authorization","then","response","data","catch","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ateranp/Documents/Spring/controlGastos/front-control/src/components/CapitalComponent/CapitalGet.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CapitalView from \"./CapitalView\";\r\n\r\n/**\r\n * Componente que consulta el capital actual desde el backend\r\n * y lo pasa como prop al componente de visualización CapitalView.\r\n *\r\n * <p>Al montar el componente, se realiza una petición GET a /api/capital\r\n * incluyendo el token JWT almacenado en localStorage.</p>\r\n */\r\nfunction CapitalComponent() {\r\n  // Estado local para almacenar el capital recibido\r\n  const [capital, setCapital] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Recupera el token JWT desde localStorage (asumido que se guardó al hacer login)\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    // Realiza la petición al backend con el token en el header Authorization\r\n    axios\r\n      .get(\"http://localhost:8080/api/capital\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Autenticación vía JWT\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // Actualiza el estado con el capital recibido\r\n        setCapital(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // Manejo de errores: muestra en consola\r\n        console.error(\"Error al obtener capital\", error);\r\n      });\r\n  }, []); // Se ejecuta solo una vez al montar el componente\r\n\r\n  // Renderiza el componente de vista, pasando el capital como prop\r\n  return <CapitalView capital={capital} />;\r\n}\r\n\r\nexport default CapitalComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAE3C;IACAV,KAAK,CACFW,GAAG,CAAC,mCAAmC,EAAE;MACxCC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK,EAAE,CAAE;MACpC;IACF,CAAC,CAAC,CACDM,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAR,UAAU,CAACQ,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBAAOf,OAAA,CAACF,WAAW;IAACK,OAAO,EAAEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1C;AAAClB,EAAA,CA3BQD,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AA6BzB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}